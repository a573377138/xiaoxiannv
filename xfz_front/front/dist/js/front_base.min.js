function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smscaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuehBoxHover(),this.handleNavStatus()},FrontBase.prototype.listenAuehBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.protocol+"//"+window.location.host,a=t.replace(n,"");$(".nav li").each(function(t,n){var e=$(n);if(e.children("a").attr("href")===a)return e.addClass("active"),!1})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenswitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptcha(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn"),s=$(".form-control");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),a.click(function(){t.hideEvent(),s.reset()})},Auth.prototype.listenswitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:0}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSmsCaptcha=function(){var n=this,e=$(".signup-group input[name='telephone']");n.smscaptcha.click(function(){var t=e.val();t||messageBox.showError("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200===t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smscaptcha.addClass("disabled");var n=20;t.smscaptcha.unbind("click");var e=setInterval(function(){t.smscaptcha.text(n+"s"),(n-=1)<=0&&(clearInterval(e),t.smscaptcha.removeClass("disabled"),t.smscaptcha.text("发送验证码"),t.listenSmsCaptcha())},1e3)},Auth.prototype.listenSigninEvent=function(){var a=this,t=$(".signin-group"),s=t.find("input[name='telephone']"),o=t.find("input[name='password']"),i=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=o.val(),e=i.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){a.hideEvent(),window.location.reload()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var f=$(".signup-group");f.find(".submit-btn").click(function(t){t.preventDefault();var n=f.find("input[name='telephone']"),e=f.find("input[name='username']"),a=f.find("input[name='img_captcha']"),s=f.find("input[name='password1']"),o=f.find("input[name='password2']"),i=f.find("input[name='sms_captcha']"),c=n.val(),r=e.val(),p=a.val(),u=s.val(),l=o.val(),h=i.val();xfzajax.post({url:"/account/register/",data:{telephone:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){window.location.reload()},fail:function(t){console.log(t),window.messageBox.showError("服务器内部错误！")}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"分钟前"):3600<=a&&a<86400?(hours=parseInt(a/60/60),hours+"小时前"):86400<=a&&a<2592e3?(days=parseInt(a/60/60/24),days+"天前"):n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyb250X2Jhc2UuanMiXSwibmFtZXMiOlsiRnJvbnRCYXNlIiwiQXV0aCIsInNlbGYiLCJ0aGlzIiwibWFza1dyYXBwZXIiLCIkIiwic2Nyb2xsV3JhcHBlciIsInNtc2NhcHRjaGEiLCJwcm90b3R5cGUiLCJydW4iLCJsaXN0ZW5BdWVoQm94SG92ZXIiLCJoYW5kbGVOYXZTdGF0dXMiLCJhdXRoYm94IiwidXNlcm1vcmVib3giLCJob3ZlciIsInNob3ciLCJoaWRlIiwidXJsIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiZG9tYWluIiwicHJvdG9jb2wiLCJob3N0IiwicGF0aCIsInJlcGxhY2UiLCJlYWNoIiwiaW5kZXgiLCJlbGVtZW50IiwibGkiLCJjaGlsZHJlbiIsImF0dHIiLCJhZGRDbGFzcyIsImxpc3RlblNob3dIaWRlRXZlbnQiLCJsaXN0ZW5zd2l0Y2hFdmVudCIsImxpc3RlblNpZ25pbkV2ZW50IiwibGlzdGVuSW1nQ2FwdGNoYUV2ZW50IiwibGlzdGVuU21zQ2FwdGNoYSIsImxpc3RlblNpZ251cEV2ZW50Iiwic2hvd0V2ZW50IiwiaGlkZUV2ZW50Iiwic2lnbmluQnRuIiwic2lnbnVwQnRuIiwiY2xvc2VCdG4iLCJ1d3NlclYiLCJjbGljayIsImNzcyIsImxlZnQiLCJyZXNldCIsImN1cnJlbnRMZWZ0IiwicGFyc2VJbnQiLCJhbmltYXRlIiwiaW1nY2FwdGNoYSIsIk1hdGgiLCJyYW5kb20iLCJ0ZWxlcGhvbmVJbnB1dCIsInRlbGVwaG9uZSIsInZhbCIsIm1lc3NhZ2VCb3giLCJzaG93RXJyb3IiLCJ4ZnphamF4IiwiZ2V0IiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJzbXNTdWNjZXNzRXZlbnQiLCJmYWlsIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwic2hvd1N1Y2Nlc3MiLCJjb3VudCIsInVuYmluZCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJ0ZXh0IiwiY2xlYXJJbnRlcnZhbCIsInJlbW92ZUNsYXNzIiwic2lnbmluR3JvdXAiLCJmaW5kIiwicGFzc3dvcmRJbnB1dCIsInJlbWVtYmVySW5wdXQiLCJwYXNzd29yZCIsInJlbWVtYmVyIiwicHJvcCIsInBvc3QiLCJyZWxvYWQiLCJzaWdudXBHcm91cCIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ1c2VybmFtZUlucHV0IiwiaW1nQ2FwdGNoYUlucHV0IiwicGFzc3dvcmQxSW5wdXQiLCJwYXNzd29yZDJJbnB1dCIsInNtc0NhcHRjaGFJbnB1dCIsInVzZXJuYW1lIiwiaW1nX2NhcHRjaGEiLCJwYXNzd29yZDEiLCJwYXNzd29yZDIiLCJzbXNfY2FwdGNoYSIsInRlbXBsYXRlIiwiZGVmYXVsdHMiLCJpbXBvcnRzIiwidGltZVNpbmNlIiwiZGF0ZVZhbHVlIiwiZGF0ZSIsIkRhdGUiLCJkYXRldHMiLCJnZXRUaW1lIiwidGltZXN0YW1wIiwibWludXRlcyIsImhvdXJzIiwiZGF5cyIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXkiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGFBeUNULFNBQVNDLE9BQ0wsSUFBSUMsRUFBT0MsS0FDWEQsRUFBS0UsWUFBY0MsRUFBRSxpQkFDckJILEVBQUtJLGNBQWNELEVBQUUsbUJBQ3JCSCxFQUFLSyxXQUFZRixFQUFFLG9CQXpDdkJMLFVBQVVRLFVBQVVDLElBQUssV0FDWE4sS0FDTE8scUJBREtQLEtBRUxRLG1CQUVUWCxVQUFVUSxVQUFVRSxtQkFBbUIsV0FDbkMsSUFBSUUsRUFBVVAsRUFBRSxhQUNaUSxFQUFhUixFQUFFLGtCQUNuQk8sRUFBUUUsTUFBTSxXQUNWRCxFQUFZRSxRQUNkLFdBQ0FGLEVBQVlHLFVBSWxCaEIsVUFBVVEsVUFBVUcsZ0JBQWtCLFdBRWxDLElBQUlNLEVBQU1DLE9BQU9DLFNBQVNDLEtBSXRCQyxFQUhXSCxPQUFPQyxTQUFTRyxTQUdQLEtBRmJKLE9BQU9DLFNBQVNJLEtBR3ZCQyxFQUFPUCxFQUFJUSxRQUFRSixFQUFPLElBQ2pCaEIs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QUFPLElBQUlDLEtBQUtGLEdBQ2hCRyxFQUFTRixFQUFLRyxVQUVkQyxJQURRLElBQUtILE1BQVFFLFVBQ0FELEdBQVEsSUFDakMsT0FBR0UsRUFBWSxHQUNKLEtBRVUsSUFBYkEsR0FBbUJBLEVBQVksTUFDbkNDLFFBQVU1RCxTQUFTMkQsRUFBWSxJQUN4QkMsUUFBUSxPQUVFLE1BQWJELEdBQXNCQSxFQUFZLE9BQ3RDRSxNQUFRN0QsU0FBUzJELEVBQVksR0FBSyxJQUMzQkUsTUFBTSxPQUVJLE9BQWJGLEdBQXlCQSxFQUFZLFFBQ3pDRyxLQUFPOUQsU0FBUzJELEVBQVksR0FBSyxHQUFLLElBQy9CRyxLQUFPLE1BRUhQLEVBQUtRLGNBS0osSUFKQVIsRUFBS1MsV0FJSyxJQUhaVCxFQUFLVSxTQUdlLElBRm5CVixFQUFLVyxXQUV1QixJQUQxQlgsRUFBS1kiLCJmaWxlIjoiZnJvbnRfYmFzZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBGcm9udEJhc2UoKSB7XHJcblxyXG59XHJcblxyXG5Gcm9udEJhc2UucHJvdG90eXBlLnJ1bj0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmID10aGlzO1xyXG4gICAgc2VsZi5saXN0ZW5BdWVoQm94SG92ZXIoKTtcclxuICAgIHNlbGYuaGFuZGxlTmF2U3RhdHVzKCk7XHJcbn07XHJcbkZyb250QmFzZS5wcm90b3R5cGUubGlzdGVuQXVlaEJveEhvdmVyPWZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgYXV0aGJveCA9ICQoJy5hdXRoLWJveCcpO1xyXG4gICAgdmFyIHVzZXJtb3JlYm94PSAkKCcudXNlci1tb3JlLWJveCcpO1xyXG4gICAgYXV0aGJveC5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdXNlcm1vcmVib3guc2hvdygpO1xyXG4gICAgfSxmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHVzZXJtb3JlYm94LmhpZGUoKTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuRnJvbnRCYXNlLnByb3RvdHlwZS5oYW5kbGVOYXZTdGF0dXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBodHRwOi8vMTI3LjAuMC4xOjgwMDAvcGF5aW5mby9cclxuICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcclxuICAgIHZhciBwcm90b2NvbCA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbDtcclxuICAgIHZhciBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7XHJcbiAgICAvLyBodHRwOiArIC8vICsgMTI3LjAuMC4xOjgwMDBcclxuICAgIHZhciBkb21haW4gPSBwcm90b2NvbCArICcvLycgKyBob3N0O1xyXG4gICAgdmFyIHBhdGggPSB1cmwucmVwbGFjZShkb21haW4sJycpO1xyXG4gICAgdmFyIG5hdkxpcyA9ICQoXCIubmF2IGxpXCIpO1xyXG4gICAgbmF2TGlzLmVhY2goZnVuY3Rpb24gKGluZGV4LGVsZW1lbnQpIHtcclxuICAgICAgICAvLyBqcyA9PiAkKGpz5a+56LGhKVxyXG4gICAgICAgIHZhciBsaSA9ICQoZWxlbWVudCk7XHJcbiAgICAgICAgdmFyIGFUYWcgPSBsaS5jaGlsZHJlbihcImFcIik7XHJcbiAgICAgICAgdmFyIGhyZWYgPSBhVGFnLmF0dHIoXCJocmVmXCIpO1xyXG4gICAgICAgIGlmKGhyZWYgPT09IHBhdGgpe1xyXG4gICAgICAgICAgICBsaS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG5cclxuXHJcbmZ1bmN0aW9uIEF1dGgoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyID0gJCgnLm1hc2std3JhcHBlcicpO1xyXG4gICAgc2VsZi5zY3JvbGxXcmFwcGVyPSQoJy5zY3JvbGwtd3JhcHBlcicpO1xyXG4gICAgc2VsZi5zbXNjYXB0Y2hhPSAkKCcuc21zLWNhcHRjaGEtYnRuJyk7XHJcbn1cclxuQXV0aC5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPXRoaXM7XHJcbiAgICBzZWxmLmxpc3RlblNob3dIaWRlRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuc3dpdGNoRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuU2lnbmluRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuSW1nQ2FwdGNoYUV2ZW50KCk7XHJcbiAgICBzZWxmLmxpc3RlblNtc0NhcHRjaGEoKTtcclxuICAgIHNlbGYubGlzdGVuU2lnbnVwRXZlbnQoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLnNob3dFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLnNob3coKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmhpZGVFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPXRoaXM7XHJcbiAgICB2YXIgc2lnbmluQnRuID0kKCcuc2lnbmluLWJ0bicpO1xyXG4gICAgdmFyIHNpZ251cEJ0biA9JCgnLnNpZ251cC1idG4nKTtcclxuICAgIHZhciBjbG9zZUJ0biA9JCgnLmNsb3NlLWJ0bicpO1xyXG4gICAgdmFyIHV3c2VyVj0kKCcuZm9ybS1jb250cm9sJyk7XHJcblxyXG4gICAgc2lnbmluQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNob3dFdmVudCgpO1xyXG4gICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5jc3MoeydsZWZ0JzowfSk7XHJcbiAgICB9KTtcclxuICAgIHNpZ251cEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHsnbGVmdCc6LTQwMH0pO1xyXG4gICAgfSk7XHJcbiAgICBjbG9zZUJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICBzZWxmLmhpZGVFdmVudCgpO1xyXG4gICAgICAgdXdzZXJWLnJlc2V0KCk7XHJcbiAgICAgICAvLyB1d3NlclYuc2V0KG51bGwpO1xyXG4gICAgICAgLy8gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGFzc3dvcmRcIikucmVzZXQoKVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5saXN0ZW5zd2l0Y2hFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZj10aGlzO1xyXG4gICAgdmFyIHN3aXRjaGVyPSQoJy5zd2l0Y2gnKTtcclxuICAgIHN3aXRjaGVyLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudExlZnQgPSBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKFwibGVmdFwiKTtcclxuICAgICAgICBjdXJyZW50TGVmdD1wYXJzZUludChjdXJyZW50TGVmdCk7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRMZWZ0PDApe1xyXG4gICAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmFuaW1hdGUoe1wibGVmdFwiOjB9KTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjpcIi00MDBweFwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5saXN0ZW5JbWdDYXB0Y2hhRXZlbnQ9ZnVuY3Rpb24oKXtcclxuICAgIHZhciBpbWdjYXB0Y2hhID0kKCcuaW1nLWNhcHRjaGEnKTtcclxuICAgIGltZ2NhcHRjaGEuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGltZ2NhcHRjaGEuYXR0cihcInNyY1wiLFwiL2FjY291bnQvaW1nX2NhcHRjaGEvXCIrXCI/cmFuZG9tPVwiK01hdGgucmFuZG9tKCkpXHJcbiAgICAgICAgLy8gaW1nY2FwdGNoYS5hdHRyKFwic3JjXCIsXCIvYWNjb3VudC9pbWdfY2FwdGNoYS9cIitcIj9yYW5kb209XCIrTWF0aC5yYW5kb20oKSlcclxuICAgIH0pXHJcbn07XHJcblxyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU21zQ2FwdGNoYT1mdW5jdGlvbigpe1xyXG4gICAgdmFyIHNlbGYgPXRoaXM7XHJcbiAgICB2YXIgdGVsZXBob25lSW5wdXQ9JChcIi5zaWdudXAtZ3JvdXAgaW5wdXRbbmFtZT0ndGVsZXBob25lJ11cIik7XHJcbiAgICBzZWxmLnNtc2NhcHRjaGEuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgdmFyIHRlbGVwaG9uZT10ZWxlcGhvbmVJbnB1dC52YWwoKTtcclxuICAgICAgICBpZighdGVsZXBob25lKXtcclxuICAgICAgICAgICAgbWVzc2FnZUJveC5zaG93RXJyb3IoJ+ivt+i+k+WFpeaJi+acuuWPt+egge+8gScpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICd1cmwnOicvYWNjb3VudC9zbXNfY2FwdGNoYS8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3RlbGVwaG9uZSc6dGVsZXBob25lXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXN1bHRbJ2NvZGUnXT09PTIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zbXNTdWNjZXNzRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ2ZhaWwnOmZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5zbXNTdWNjZXNzRXZlbnQ9ZnVuY3Rpb24oKXtcclxuICAgIHZhciBzZWxmPXRoaXM7XHJcbiAgICBtZXNzYWdlQm94LnNob3dTdWNjZXNzKCfnn63kv6Hpqozor4HnoIHlj5HpgIHmiJDlip/vvIEnKTtcclxuICAgIHNlbGYuc21zY2FwdGNoYS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgIHZhciBjb3VudD0gMjA7XHJcbiAgICBzZWxmLnNtc2NhcHRjaGEudW5iaW5kKCdjbGljaycpO1xyXG4gICAgdmFyIHRpbWVyPXNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNtc2NhcHRjaGEudGV4dChjb3VudCsncycpO1xyXG4gICAgICAgIGNvdW50LT0xO1xyXG4gICAgICAgIGlmKGNvdW50PD0wKXtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XHJcbiAgICAgICAgICAgIHNlbGYuc21zY2FwdGNoYS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgc2VsZi5zbXNjYXB0Y2hhLnRleHQoJ+WPkemAgemqjOivgeeggScpO1xyXG4gICAgICAgICAgICBzZWxmLmxpc3RlblNtc0NhcHRjaGEoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIH0sMTAwMCk7XHJcblxyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU2lnbmluRXZlbnQ9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvLyB2YXIgY2xvc2VCdG4gPSQoJy5jbG9zZS1idG4nKTtcclxuICAgIHZhciBzaWduaW5Hcm91cCA9ICQoJy5zaWduaW4tZ3JvdXAnKTtcclxuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZElucHV0PSBzaWduaW5Hcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ncGFzc3dvcmQnXVwiKTtcclxuICAgIHZhciByZW1lbWJlcklucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3JlbWVtYmVyJ11cIik7XHJcbiAgICB2YXIgc3VibWl0QnRuPXNpZ25pbkdyb3VwLmZpbmQoXCIuc3VibWl0LWJ0blwiKTtcclxuXHJcbiAgICBzdWJtaXRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0ZWxlcGhvbmU9dGVsZXBob25lSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHBhc3N3b3JkID0gcGFzc3dvcmRJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgcmVtZW1iZXI9IHJlbWVtYmVySW5wdXQucHJvcChcImNoZWNrZWRcIik7XHJcblxyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOicvYWNjb3VudC9sb2dpbi8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6e1xyXG4gICAgICAgICAgICAgICAgJ3RlbGVwaG9uZSc6dGVsZXBob25lLFxyXG4gICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJzpwYXNzd29yZCxcclxuICAgICAgICAgICAgICAgICdyZW1lbWJlcic6cmVtZW1iZXI/MTowXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5oaWRlRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzpmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5saXN0ZW5TaWdudXBFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzaWdudXBHcm91cCA9ICQoJy5zaWdudXAtZ3JvdXAnKTtcclxuICAgIHZhciBzdWJtaXRCdG4gPSBzaWdudXBHcm91cC5maW5kKCcuc3VibWl0LWJ0bicpO1xyXG4gICAgc3VibWl0QnRuLmNsaWNrKGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdmFyIHRlbGVwaG9uZUlucHV0ID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpO1xyXG4gICAgICAgIHZhciB1c2VybmFtZUlucHV0ID0gc2lnbnVwR3JvdXAuZmluZChcImlucHV0W25hbWU9J3VzZXJuYW1lJ11cIik7XHJcbiAgICAgICAgdmFyIGltZ0NhcHRjaGFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdpbWdfY2FwdGNoYSddXCIpO1xyXG4gICAgICAgIHZhciBwYXNzd29yZDFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZDEnXVwiKTtcclxuICAgICAgICB2YXIgcGFzc3dvcmQySW5wdXQgPSBzaWdudXBHcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ncGFzc3dvcmQyJ11cIik7XHJcbiAgICAgICAgdmFyIHNtc0NhcHRjaGFJbnB1dCA9IHNpZ251cEdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdzbXNfY2FwdGNoYSddXCIpO1xyXG5cclxuICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHVzZXJuYW1lID0gdXNlcm5hbWVJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgaW1nX2NhcHRjaGEgPSBpbWdDYXB0Y2hhSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHBhc3N3b3JkMSA9IHBhc3N3b3JkMUlucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciBwYXNzd29yZDIgPSBwYXNzd29yZDJJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgc21zX2NhcHRjaGEgPSBzbXNDYXB0Y2hhSW5wdXQudmFsKCk7XHJcblxyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2FjY291bnQvcmVnaXN0ZXIvJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICAndGVsZXBob25lJzogdGVsZXBob25lLFxyXG4gICAgICAgICAgICAgICAgJ3VzZXJuYW1lJzogdXNlcm5hbWUsXHJcbiAgICAgICAgICAgICAgICAnaW1nX2NhcHRjaGEnOiBpbWdfY2FwdGNoYSxcclxuICAgICAgICAgICAgICAgICdwYXNzd29yZDEnOiBwYXNzd29yZDEsXHJcbiAgICAgICAgICAgICAgICAncGFzc3dvcmQyJzogcGFzc3dvcmQyLFxyXG4gICAgICAgICAgICAgICAgJ3Ntc19jYXB0Y2hhJzogc21zX2NhcHRjaGFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzpmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcign5pyN5Yqh5Zmo5YaF6YOo6ZSZ6K+v77yBJylcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuXHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhdXRoID0gbmV3IEF1dGgoKTtcclxuICAgIGF1dGgucnVuKClcclxufSk7XHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgdmFyIGZyb250YmFzZSA9IG5ldyBGcm9udEJhc2UoKTtcclxuICAgZnJvbnRiYXNlLnJ1bigpO1xyXG59KTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgaWYod2luZG93LnRlbXBsYXRlKXtcclxuICAgICAgICB0ZW1wbGF0ZS5kZWZhdWx0cy5pbXBvcnRzLnRpbWVTaW5jZSA9IGZ1bmN0aW9uIChkYXRlVmFsdWUpIHtcclxuICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRlVmFsdWUpO1xyXG4gICAgICAgICAgICB2YXIgZGF0ZXRzID0gZGF0ZS5nZXRUaW1lKCk7IC8vIOW+l+WIsOeahOaYr+avq+enkueahFxyXG4gICAgICAgICAgICB2YXIgbm93dHMgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOyAvL+W+l+WIsOeahOaYr+W9k+WJjeaXtumXtOeahOaXtumXtOaIs1xyXG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gKG5vd3RzIC0gZGF0ZXRzKS8xMDAwOyAvLyDpmaTku6UxMDAw77yM5b6X5Yiw55qE5piv56eSXHJcbiAgICAgICAgICAgIGlmKHRpbWVzdGFtcCA8IDYwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ+WImuWImic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZih0aW1lc3RhbXAgPj0gNjAgJiYgdGltZXN0YW1wIDwgNjAqNjApIHtcclxuICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbWludXRlcysn5YiG6ZKf5YmNJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmKHRpbWVzdGFtcCA+PSA2MCo2MCAmJiB0aW1lc3RhbXAgPCA2MCo2MCoyNCkge1xyXG4gICAgICAgICAgICAgICAgaG91cnMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBob3Vycysn5bCP5pe25YmNJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmKHRpbWVzdGFtcCA+PSA2MCo2MCoyNCAmJiB0aW1lc3RhbXAgPCA2MCo2MCoyNCozMCkge1xyXG4gICAgICAgICAgICAgICAgZGF5cyA9IHBhcnNlSW50KHRpbWVzdGFtcCAvIDYwIC8gNjAgLyAyNCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF5cyArICflpKnliY0nO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgaG91ciA9IGRhdGUuZ2V0SG91cnMoKTtcclxuICAgICAgICAgICAgICAgIHZhciBtaW51dGUgPSBkYXRlLmdldE1pbnV0ZXMoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB5ZWFyKycvJyttb250aCsnLycrZGF5K1wiIFwiK2hvdXIrXCI6XCIrbWludXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTsiXX0=
