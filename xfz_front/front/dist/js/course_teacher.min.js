function Teacher(){}Teacher.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:100,serverUrl:"/ueditor/upload/"})},Teacher.prototype.lisentQnloadfileEnvent=function(){var i=this;$("#avatar-btn").change(function(){var n=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,o=(new Date).getTime()+"."+n.name.split(".")[-1],r={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},a={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(n,o,t,r,a).subscribe({next:i.handleFileUploadProgress,error:i.handleFileUploadError,complete:i.handleFileUploadComplete})}}})})},Teacher.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";Teacher.progressGroup.show();var o=$(".progress-bar");o.css({width:t}),o.text(t)},Teacher.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},Teacher.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="http://poaqr3qgt.bkt.clouddn.com/"+e.key;$("input[name='teacher-avatar']").val(t)},Teacher.prototype.lisentSubmit=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name='teacher-username']").val(),o=$("input[name='teacher-avatar']").val(),r=$("input[name='jobtitle']").val(),a=window.ue.getContent();xfzajax.post({url:"/cms/addcourse_teacher/",data:{username:t,avatar:o,jobtitle:r,profile:a},success:function(e){200===e.code&&xfzalert.alertSuccess("添加讲师成功！",function(){window.location=window.location.href})}})})},Teacher.prototype.run=function(){var e=this;e.initUEditor(),e.lisentQnloadfileEnvent(),e.lisentSubmit()},$(function(){(new Teacher).run(),Teacher.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
