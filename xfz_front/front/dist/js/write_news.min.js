function News(){}News.prototype.listenUploadFileEvent=function(){var o=$("#upload-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQnUploadFileEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,o=(new Date).getTime()+"."+a.name.split(".")[-1],n={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(a,o,t,n,i).subscribe({next:r.handleFileUploadProgress,error:r.handleFileUploadError,complete:r.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var o=$(".progress-bar");o.css({width:t}),o.text(t)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="http://poaqr3qgt.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenSunmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name='title']").val(),o=$("select[name='category']").val(),n=$("input[name='desc']").val(),i=$("input[name='thumbnail']").val(),a=window.ue.getContent();console.log(o),xfzajax.post({url:"/cms/writenews/",data:{title:t,category:o,desc:n,thumbnail:i,content:a},success:function(e){200===e.code&&xfzalert.alertSuccess("新闻发布成功！",function(){window.location.reload()})}})})},News.prototype.run=function(){var e=this;e.listenQnUploadFileEvent(),e.initUEditor(),e.listenSunmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
